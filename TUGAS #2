// Implementasi PSPEC dari DPPL 

/*
Anggota Kelompok-Puson :
1.  Muhammad Faza Abiyyu - 2211102010
2. Muhammad Rizqi - 2211102016
3. Evan Rafif Pradana - 2211102017
4. Revan Kurwniawan - 2211102167

Kelas : S1-IF-10-03
*/

// Muhammad Faza Abiyyu - Pascal

program FormRegistrasi;

type
  TUser = record
    username: string;
    password: string;
    email: string;
  end;

var
  user: TUser;

begin
  WriteLn('=== Form Registrasi ===');
  
  Write('Masukkan username: ');
  ReadLn(user.username);
  
  Write('Masukkan password: ');
  ReadLn(user.password);
  
  Write('Masukkan email: ');
  ReadLn(user.email);
  
  WriteLn;
  WriteLn('=== Data Registrasi ===');
  WriteLn('Username: ', user.username);
  WriteLn('Password: ', user.password);
  WriteLn('Email: ', user.email);
  
  WriteLn('Registrasi berhasil!');
end.



// Muhammad Rizqi - C

#include <stdio.h>

int main() {
    int jumlahElemen, i;
    float prob, totalProb = 1.0;

    printf("Perhitungan PSPEC\n");

    printf("Masukkan jumlah elemen: ");
    scanf("%d", &jumlahElemen);

    for (i = 0; i < jumlahElemen; i++) {
        printf("Masukkan probabilitas sukses untuk elemen %d: ", i + 1);
        scanf("%f", &prob);

        if (prob < 0.0 || prob > 1.0) {
            printf("Error: Probabilitas harus antara 0.0 dan 1.0\n");
            return 1;
        }

        totalProb *= prob;
    }

    printf("Probabilitas total keberhasilan: %.4f\n", totalProb);
    return 0;
}


// Evan Rafif Pradana - PHP

<?php
class MemberTask {
    public $id;               
    public $taskDescription;   
    public $estimatedHours;    
    function __construct($id, $taskDescription, $estimatedHours) {
        $this->id = $id;
        $this->taskDescription = $taskDescription;
        $this->estimatedHours = $estimatedHours;
    }
}

$members = array(
    new MemberTask(1, "Design product specification", 12), 
    new MemberTask(2, "Implement main architecture", 20),   
    new MemberTask(3, "Test the system", 8),                
    new MemberTask(4, "Documentation", 5)                  
);

function calculateTotalTime($members) {
    $totalTime = 0; 
    foreach ($members as $member) {
        $totalTime += $member->estimatedHours;
    }
    return $totalTime; 
}

function getLongTasks($members, $minHours) {
    $longTasks = array(); 
    foreach ($members as $member) {
        if ($member->estimatedHours > $minHours) {
            $longTasks[] = $member; 
        }
    }
    return $longTasks; 
}

echo "Group Tasks Assignment:\n";
foreach ($members as $member) {
    echo "Member {$member->id} - Task: {$member->taskDescription} (Estimated time: {$member->estimatedHours} hours)\n";
}

$totalTime = calculateTotalTime($members);
echo "\nTotal estimated time for all tasks: $totalTime hours\n";

$longTasks = getLongTasks($members, 10);
echo "\nTasks taking longer than 10 hours:\n";
foreach ($longTasks as $task) {
    echo "Member {$task->id} - Task: {$task->taskDescription} (Estimated time: {$task->estimatedHours} hours)\n";
}
?>



// Revan Kurniawan - Pascal

program PerhitunganPSPEC;

var
  jumlahElemen, i: integer;
  prob, totalProb: real;

begin
  totalProb := 1.0;

  writeln('Perhitungan PSPEC');
  
  write('Masukkan jumlah elemen: ');
  readln(jumlahElemen);

  for i := 1 to jumlahElemen do
  begin
    write('Masukkan probabilitas sukses untuk elemen ', i, ': ');
    readln(prob);

    if (prob < 0.0) or (prob > 1.0) then
    begin
      writeln('Error: Probabilitas harus antara 0.0 dan 1.0');
      exit;
    end;

    totalProb := totalProb * prob;
  end;

  writeln('Probabilitas total keberhasilan: ', totalProb:0:4);
end.


